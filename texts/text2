Analyseur syntaxique: Base du 42sh, ce dernier sera
basé sur une structure arborescente.
L'analyseur syntaxique devra être développé
rigoureusement afin d'obtenir une base solide pour notre projet.
Nous effectuerons bien sûr un parser LL (top-down),
reposant sur l'analyse descendante d'une grammaire.
Utilisé pour analyser la grammaire du shell, il sera en lien direct avec
l'analyseur lexical, qui lui enverra les tokens à analyser.

Ainsi, l'objectif de l'analyseur est de produire un arbre syntaxique abstrait
(AST) à partir de la grammaire donnée.
Ce dernier sera d'ailleurs affiché par un module développé
lors de la version 0.5.

Ci dessous un exemple d'AST pour une expression arithmétique:
IMAGE AST.JPG

Commandes: Une fois les analyseurs lexical et syntaxique terminés,
nous pourrons commencer à développer toutes les commandes
basiques d'un shell, aussi appelées "built-ins".
Chaque commande ayant un fonctionnement spécifique, nous
n'expliciterons pas ici en détail les aspects techniques
de cette partie.
